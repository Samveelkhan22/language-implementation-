
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'EQUALS FLOAT INT NAME NUMBER SEMICOLONdeclarations : declarations declaration\n                    | declarationdeclaration : type NAME EQUALS value SEMICOLONtype : INT\n            | FLOATvalue : NAME\n             | NAME NAME\n             | NUMBER\n             | NUMBER NUMBER'
    
_lr_action_items = {'INT':([0,1,2,6,13,],[4,4,-2,-1,-3,]),'FLOAT':([0,1,2,6,13,],[5,5,-2,-1,-3,]),'$end':([1,2,6,13,],[0,-2,-1,-3,]),'NAME':([3,4,5,8,9,],[7,-4,-5,9,12,]),'EQUALS':([7,],[8,]),'NUMBER':([8,11,],[11,14,]),'SEMICOLON':([9,10,11,12,14,],[-6,13,-8,-7,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declarations':([0,],[1,]),'declaration':([0,1,],[2,6,]),'type':([0,1,],[3,3,]),'value':([8,],[10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declarations","S'",1,None,None,None),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','afeeler.py',32),
  ('declarations -> declaration','declarations',1,'p_declarations','afeeler.py',33),
  ('declaration -> type NAME EQUALS value SEMICOLON','declaration',5,'p_declaration','afeeler.py',40),
  ('type -> INT','type',1,'p_type','afeeler.py',44),
  ('type -> FLOAT','type',1,'p_type','afeeler.py',45),
  ('value -> NAME','value',1,'p_value','afeeler.py',49),
  ('value -> NAME NAME','value',2,'p_value','afeeler.py',50),
  ('value -> NUMBER','value',1,'p_value','afeeler.py',51),
  ('value -> NUMBER NUMBER','value',2,'p_value','afeeler.py',52),
]
